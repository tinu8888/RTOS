


ARM Macro Assembler    Page 1 


    1 00000000         ;/****************************************Copyright (c)*
                       *************************************************
    2 00000000         ;**                               ¹ãÖÝÖÜÁ¢¹¦µ¥Æ¬»ú·¢Õ¹ÓÐ
                       ÏÞ¹«Ë¾
    3 00000000         ;**                                     ÑÐ    ¾¿    Ëù
    4 00000000         ;**                                        ²úÆ·Ò»²¿ 
    5 00000000         ;**
    6 00000000         ;**                                 http://www.zlgmcu.co
                       m
    7 00000000         ;**
    8 00000000         ;**--------------ÎÄ¼þÐÅÏ¢-------------------------------
                       -------------------------------------------------
    9 00000000         ;**ÎÄ   ¼þ   Ãû: os_cpu_s.s
   10 00000000         ;**´´   ½¨   ÈË: ³ÂÃ÷¼Æ
   11 00000000         ;**×îºóÐÞ¸ÄÈÕÆÚ: 2003Äê6ÔÂ19ÈÕ
   12 00000000         ;**Ãè        Êö: ¦ÌCOS-IIÔÚLPC210xÉÏµÄÒÆÖ²´úÂë»ã±à´úÂë²¿
                       ·Ö£¬ÓÃADS1.2±àÒë
   13 00000000         ;**
   14 00000000         ;**--------------ÀúÊ·°æ±¾ÐÅÏ¢---------------------------
                       -------------------------------------------------
   15 00000000         ;** ´´½¨ÈË: ³ÂÃ÷¼Æ
   16 00000000         ;** °æ  ±¾: V1.0
   17 00000000         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ5ÈÕ
   18 00000000         ;** Ãè¡¡Êö: Ô­Ê¼°æ
   19 00000000         ;**
   20 00000000         ;**-----------------------------------------------------
                       -------------------------------------------------
   21 00000000         ;** ÐÞ¸ÄÈË: ³ÂÃ÷¼Æ
   22 00000000         ;** °æ  ±¾: V1.1
   23 00000000         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ11ÈÕ
   24 00000000         ;** Ãè¡¡Êö: ÅäºÏVectors.s¸üÕýIRQÇ¶Ì×µÄBUG¶ø×÷ÏàÓ¦µÄÐÞ¸Ä
   25 00000000         ;**
   26 00000000         ;**-----------------------------------------------------
                       -------------------------------------------------
   27 00000000         ;** ÐÞ¸ÄÈË: ³ÂÃ÷¼Æ
   28 00000000         ;** °æ  ±¾: V1.2
   29 00000000         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ13ÈÕ
   30 00000000         ;** Ãè¡¡Êö: °´ÕÕ¦ÌCOS-II V2.52µÄÒªÇóÐÞ¸Ä£¨ÒÔÇ°ÊÇ»ùÓÚ¦ÌCO
                       S-II V2.0£©
   31 00000000         ;**
   32 00000000         ;**-----------------------------------------------------
                       -------------------------------------------------
   33 00000000         ;** ÐÞ¸ÄÈË: ³ÂÃ÷¼Æ
   34 00000000         ;** °æ  ±¾: V1.3
   35 00000000         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ19ÈÕ
   36 00000000         ;** Ãè¡¡Êö: ²»ÍêÈ«°´ÕÕ¦ÌCOS-II V2.52µÄÒªÇóÒÔÌá¸ßÐ§ÂÊ
   37 00000000         ;**
   38 00000000         ;**--------------µ±Ç°°æ±¾ÐÞ¶©---------------------------
                       ---------------------------------------------------
   39 00000000         ;** ÐÞ¸ÄÈË: 
   40 00000000         ;** ÈÕ¡¡ÆÚ:
   41 00000000         ;** Ãè¡¡Êö:
   42 00000000         ;**
   43 00000000         ;**-----------------------------------------------------
                       -------------------------------------------------
   44 00000000         ;*******************************************************
                       *************************************************/
   45 00000000         ;¶¨ÒåÏµÍ³Ä£Ê½¶ÑÕ»µÄ´óÐ¡
   46 00000000 00000020 



ARM Macro Assembler    Page 2 


                       SVC_STACK_LEGTH
                               EQU              32
   47 00000000         
   48 00000000 00000080 
                       NoInt   EQU              0x80
   49 00000000         
   50 00000000 00000010 
                       USR32Mode
                               EQU              0x10
   51 00000000 00000013 
                       SVC32Mode
                               EQU              0x13
   52 00000000 0000001F 
                       SYS32Mode
                               EQU              0x1f
   53 00000000 00000012 
                       IRQ32Mode
                               EQU              0x12
   54 00000000 00000011 
                       FIQ32Mode
                               EQU              0x11
   55 00000000         
   56 00000000         ;T_bitÓÃÓÚ¼ì²â½øÈëÒì³£Ç°cpuÊÇ·ñ´¦ÓÚTHUMB×´Ì¬
   57 00000000 00000020 
                       T_bit   EQU              0x20
   58 00000000         
   59 00000000                 CODE32
   60 00000000                 PRESERVE8
   61 00000000                 AREA             |subr|, CODE, READONLY
   62 00000000         
   63 00000000                 IMPORT           OSTCBCur    ;Ö¸Ïòµ±Ç°ÈÎÎñTCBµÄÖ
                                                            ¸Õë
   64 00000000                 IMPORT           OSTCBHighRdy ;Ö¸Ïò½«ÒªÔËÐÐµÄÈÎÎ
                                                            ñTCBµÄÖ¸Õë
   65 00000000                 IMPORT           OSPrioCur   ;µ±Ç°ÈÎÎñµÄÓÅÏÈ¼¶
   66 00000000                 IMPORT           OSPrioHighRdy ;½«ÒªÔËÐÐµÄÈÎÎñµÄ
                                                            ÓÅÏÈ¼¶
   67 00000000                 IMPORT           OSTaskSwHook 
                                                            ;ÈÎÎñÇÐ»»µÄ¹³×Óº¯Êý
                                                            
   68 00000000                 IMPORT           OSRunning   ;uC/OS-IIÔËÐÐ±êÖ¾
   69 00000000         
   70 00000000                 IMPORT           OsEnterSum  ;¹ØÖÐ¶Ï¼ÆÊýÆ÷£¨¹ØÖÐ
                                                            ¶ÏÐÅºÅÁ¿£©
   71 00000000                 IMPORT           SWI_Exception 
                                                            ;ÈíÖÐ¶ÏÒì³£´¦Àí³ÌÐò
                                                            
   72 00000000         
   73 00000000                 EXPORT           __OSStartHighRdy
   74 00000000                 EXPORT           OSIntCtxSw  ;ÖÐ¶ÏÍË³öÊ±µÄÈë¿Ú£¬
                                                            ²Î¼ûstartup.sÖÐµÄIR
                                                            Q_Handler
   75 00000000                 EXPORT           SoftwareInterrupt ;ÈíÖÐ¶ÏÈë¿Ú
   76 00000000         
   77 00000000         
   78 00000000         ;/******************************************************
                       ***************************************************
   79 00000000         ;** º¯ÊýÃû³Æ: SoftwareInterrupt
   80 00000000         ;** ¹¦ÄÜÃèÊö: Èí¼þÖÐ¶Ï£¬ÓÃÓÚÌá¹©Ò»Ð©ÏµÍ³·þÎñ£¬¹¦ÄÜ²Î¿¼os



ARM Macro Assembler    Page 3 


                       _cpu_c.cÎÄ¼þ
   81 00000000         ;** Êä¡¡Èë:   ÒÀ¹¦ÄÜ¶ø¶¨
   82 00000000         ;** Êä¡¡³ö :  ÒÀ¹¦ÄÜ¶ø¶¨
   83 00000000         ;** È«¾Ö±äÁ¿: ÎÞ
   84 00000000         ;** µ÷ÓÃÄ£¿é: SWI_Exception
   85 00000000         ;** 
   86 00000000         ;** ×÷¡¡Õß: ³ÂÃ÷¼Æ
   87 00000000         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ5ÈÕ
   88 00000000         ;**-----------------------------------------------------
                       --------------------------------------------------
   89 00000000         ;** ÐÞ¡¡¸Ä: ³ÂÃ÷¼Æ
   90 00000000         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ11ÈÕ
   91 00000000         ;**-----------------------------------------------------
                       --------------------------------------------------
   92 00000000         ;** ÐÞ¡¡¸Ä: ³ÂÃ÷¼Æ
   93 00000000         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ13ÈÕ
   94 00000000         ;**-----------------------------------------------------
                       --------------------------------------------------
   95 00000000         ;** ÐÞ¡¡¸Ä: ³ÂÃ÷¼Æ
   96 00000000         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ19ÈÕ
   97 00000000         ;**-----------------------------------------------------
                       --------------------------------------------------
   98 00000000         ;*******************************************************
                       *************************************************/
   99 00000000         
  100 00000000         ;Èí¼þÖÐ¶Ï
  101 00000000         SoftwareInterrupt
  102 00000000 E59FD030        LDR              SP, StackSvc ; ÖØÐÂÉèÖÃ¶ÑÕ»Ö¸Õë
                                                            
  103 00000004 E92D500F        STMFD            SP!, {R0-R3, R12, LR}
  104 00000008 E1A0100D        MOV              R1, SP      ; R1Ö¸Ïò²ÎÊý´æ´¢Î»Ö
                                                            Ã
  105 0000000C         
  106 0000000C E14F3000        MRS              R3, SPSR
  107 00000010 E3130020        TST              R3, #T_bit  ; ÖÐ¶ÏÇ°ÊÇ·ñÊÇThumb
                                                            ×´Ì¬
  108 00000014 115E00B2        LDRNEH           R0, [LR,#-2] ; ÊÇ: È¡µÃThumb×´Ì
                                                            ¬SWIºÅ
  109 00000018 13C00CFF        BICNE            R0, R0, #0xff00
  110 0000001C 051E0004        LDREQ            R0, [LR,#-4] ; ·ñ: È¡µÃarm×´Ì¬S
                                                            WIºÅ
  111 00000020 03C004FF        BICEQ            R0, R0, #0xFF000000
  112 00000024         ; r0 = SWIºÅ£¬R1Ö¸Ïò²ÎÊý´æ´¢Î»ÖÃ
  113 00000024 E3500001        CMP              R0, #1
  114 00000028 359FF11C        LDRLO            PC, =OSIntCtxSw
  115 0000002C 059FF11C        LDREQ            PC, =__OSStartHighRdy ; SWI 0x0
                                                            1ÎªµÚÒ»´ÎÈÎÎñÇÐ»»
  116 00000030         
  117 00000030 EBFFFFFE        BL               SWI_Exception
  118 00000034         
  119 00000034 E8FD900F        LDMFD            SP!, {R0-R3, R12, PC}^
  120 00000038         
  121 00000038 0000007C 
                       StackSvc
                               DCD              (SvcStackSpace + SVC_STACK_LEGT
H * 4 - 4)
  122 0000003C         
  123 0000003C         ;/******************************************************
                       ***************************************************



ARM Macro Assembler    Page 4 


  124 0000003C         ;** º¯ÊýÃû³Æ: OSIntCtxSw
  125 0000003C         ;** ¹¦ÄÜÃèÊö: ÖÐ¶ÏÍË³öÊ±µÄÈë¿Ú
  126 0000003C         ;** Êä¡¡Èë:   R3    :µ±Ç°ÈÎÎñµÄ×´Ì¬¼Ä´æÆ÷CPSR£¨¼´SPSRµÄÖ
                       µ£©
  127 0000003C         ;**           R4-R12:µ±Ç°ÈÎÎñµÄR4-R11
  128 0000003C         ;**           µ±Ç°´¦ÀíÆ÷Ä£Ê½µÄ¶ÑÕ»½á¹¹£¨³öÕ»´ÎÐò£©£ºR0-R
                       3¡¢R12¡¢PC£¨µ±Ç°ÈÎÎñµÄ£©
  129 0000003C         ;** Êä¡¡³ö :  ÎÞ
  130 0000003C         ;** È«¾Ö±äÁ¿: OSPrioCur,OSPrioHighRdy,OSPrioCur,OSPrioHi
                       ghRdy
  131 0000003C         ;** µ÷ÓÃÄ£¿é: ÎÞ
  132 0000003C         ;** 
  133 0000003C         ;** ×÷¡¡Õß: ³ÂÃ÷¼Æ
  134 0000003C         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ5ÈÕ
  135 0000003C         ;**-----------------------------------------------------
                       --------------------------------------------------
  136 0000003C         ;** ÐÞ¡¡¸Ä: ³ÂÃ÷¼Æ
  137 0000003C         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ11ÈÕ
  138 0000003C         ;**-----------------------------------------------------
                       --------------------------------------------------
  139 0000003C         ;** ÐÞ¡¡¸Ä: ³ÂÃ÷¼Æ
  140 0000003C         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ13ÈÕ
  141 0000003C         ;**-----------------------------------------------------
                       --------------------------------------------------
  142 0000003C         ;** ÐÞ¡¡¸Ä: ³ÂÃ÷¼Æ
  143 0000003C         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ19ÈÕ
  144 0000003C         ;**-----------------------------------------------------
                       --------------------------------------------------
  145 0000003C         ;*******************************************************
                       *************************************************/
  146 0000003C         OSIntCtxSw
  147 0000003C         ;ÏÂÃæÎª±£´æÈÎÎñ»·¾³
  148 0000003C E59D2014        LDR              R2, [SP, #20] ;»ñÈ¡PC
  149 00000040 E59DC010        LDR              R12, [SP, #16] ;»ñÈ¡R12
  150 00000044 E10F0000        MRS              R0, CPSR
  151 00000048         
  152 00000048 E321F09F        MSR              CPSR_c, #(NoInt | SYS32Mode)
  153 0000004C E1A0100E        MOV              R1, LR
  154 00000050 E92D0006        STMFD            SP!, {R1-R2} ;±£´æLR,PC
  155 00000054 E92D1FF0        STMFD            SP!, {R4-R12} ;±£´æR4-R12
  156 00000058         
  157 00000058 E121F000        MSR              CPSR_c, R0
  158 0000005C E8BD00F0        LDMFD            SP!, {R4-R7} ;»ñÈ¡R0-R3
  159 00000060 E28DD008        ADD              SP, SP, #8  ;³öÕ»R12,PC
  160 00000064         
  161 00000064 E321F09F        MSR              CPSR_c, #(NoInt | SYS32Mode)
  162 00000068 E92D00F0        STMFD            SP!, {R4-R7} ;±£´æR0-R3
  163 0000006C         
  164 0000006C E59F10E0        LDR              R1, =OsEnterSum ;»ñÈ¡OsEnterSum
                                                            
  165 00000070 E5912000        LDR              R2, [R1]
  166 00000074 E92D000C        STMFD            SP!, {R2, R3} ;±£´æCPSR,OsEnter
                                                            Sum
  167 00000078         
  168 00000078         ;±£´æµ±Ç°ÈÎÎñ¶ÑÕ»Ö¸Õëµ½µ±Ç°ÈÎÎñµÄTCB
  169 00000078 E59F10D8        LDR              R1, =OSTCBCur
  170 0000007C E5911000        LDR              R1, [R1]
  171 00000080 E581D000        STR              SP, [R1]
  172 00000084         



ARM Macro Assembler    Page 5 


  173 00000084 EBFFFFFE        BL               OSTaskSwHook ;µ÷ÓÃ¹³×Óº¯Êý
  174 00000088         ;OSPrioCur <= OSPrioHighRdy
  175 00000088 E59F40CC        LDR              R4, =OSPrioCur
  176 0000008C E59F50CC        LDR              R5, =OSPrioHighRdy
  177 00000090 E5D56000        LDRB             R6, [R5]
  178 00000094 E5C46000        STRB             R6, [R4]
  179 00000098         ;OSTCBCur <= OSTCBHighRdy
  180 00000098 E59F60C4        LDR              R6, =OSTCBHighRdy
  181 0000009C E5966000        LDR              R6, [R6]
  182 000000A0 E59F40B0        LDR              R4, =OSTCBCur
  183 000000A4 E5846000        STR              R6, [R4]
  184 000000A8         OSIntCtxSw_1
  185 000000A8         ;»ñÈ¡ÐÂÈÎÎñ¶ÑÕ»Ö¸Õë
  186 000000A8 E5964000        LDR              R4, [R6]
  187 000000AC E284D044        ADD              SP, R4, #68 ;17¼Ä´æÆ÷CPSR,OsEnt
                                                            erSum,R0-R12,LR,SP
  188 000000B0 E51DE008        LDR              LR, [SP, #-8]
  189 000000B4 E321F093        MSR              CPSR_c, #(NoInt | SVC32Mode) 
                                                            ;½øÈë¹ÜÀíÄ£Ê½
  190 000000B8 E1A0D004        MOV              SP, R4      ;ÉèÖÃ¶ÑÕ»Ö¸Õë
  191 000000BC         
  192 000000BC E8BD0030        LDMFD            SP!, {R4, R5} ;CPSR,OsEnterSum
  193 000000C0         ;»Ö¸´ÐÂÈÎÎñµÄOsEnterSum
  194 000000C0 E59F308C        LDR              R3, =OsEnterSum
  195 000000C4 E5834000        STR              R4, [R3]
  196 000000C8         
  197 000000C8 E16FF005        MSR              SPSR_cxsf, R5 ;»Ö¸´CPSR
  198 000000CC E8FDDFFF        LDMFD            SP!, {R0-R12, LR, PC }^ 
                                                            ;ÔËÐÐÐÂÈÎÎñ
  199 000000D0         
  200 000000D0         OSCtxSw
  201 000000D0         ; SAVE CURRENT TASK'S CONTEXT:
  202 000000D0 E92D4000        STMFD            SP!, {LR}   ;     Push return a
                                                            ddress,
  203 000000D4 E92D4000        STMFD            SP!, {LR}
  204 000000D8 E92D1FFF        STMFD            SP!, {R0-R12} ;     Push regist
                                                            ers,
  205 000000DC E10F0000        MRS              R0, CPSR    ;     Push current 
                                                            CPSR,
  206 000000E0         ;; TST     LR, #1                                       
                              ;     See if called from Thumb mode,
  207 000000E0         ;;    ORRNE   R0, R0, =OS_CPU_ARM_CONTROL_THUMB         
                                 ;     If yes, set the T-bit.
  208 000000E0 E92D0001        STMFD            SP!, {R0}
  209 000000E4         
  210 000000E4 E59F006C        LDR              R0, =OSTCBCur ; OSTCBCur->OSTCB
                                                            StkPtr = SP;
  211 000000E8 E5901000        LDR              R1, [R0]
  212 000000EC E581D000        STR              SP, [R1]
  213 000000F0         
  214 000000F0 E59F0070        LDR              R0, =OSTaskSwHook 
                                                            ; OSTaskSwHook();
  215 000000F4 E1A0E00F        MOV              LR, PC
  216 000000F8 E12FFF10        BX               R0
  217 000000FC         
  218 000000FC E59F0058        LDR              R0, =OSPrioCur ; OSPrioCur = OS
                                                            PrioHighRdy;
  219 00000100 E59F1058        LDR              R1, =OSPrioHighRdy
  220 00000104 E5D12000        LDRB             R2, [R1]



ARM Macro Assembler    Page 6 


  221 00000108 E5C02000        STRB             R2, [R0]
  222 0000010C         
  223 0000010C E59F0044        LDR              R0, =OSTCBCur ; OSTCBCur  = OST
                                                            CBHighRdy;
  224 00000110 E59F104C        LDR              R1, =OSTCBHighRdy
  225 00000114 E5912000        LDR              R2, [R1]
  226 00000118 E5802000        STR              R2, [R0]
  227 0000011C         
  228 0000011C E592D000        LDR              SP, [R2]    ; SP = OSTCBHighRdy
                                                            ->OSTCBStkPtr;
  229 00000120         
  230 00000120         ; RESTORE NEW TASK'S CONTEXT:
  231 00000120 E8BD0001        LDMFD            SP!, {R0}   ;    Pop new task's
                                                             CPSR,
  232 00000124 E16FF000        MSR              SPSR_cxsf, R0
  233 00000128         
  234 00000128 E8FDDFFF        LDMFD            SP!, {R0-R12, LR, PC}^ ;    Pop
                                                             new task's context
                                                            .
  235 0000012C         
  236 0000012C         
  237 0000012C         ;/******************************************************
                       ***************************************************
  238 0000012C         ;** º¯ÊýÃû³Æ: __OSStartHighRdy
  239 0000012C         ;** ¹¦ÄÜÃèÊö: uC/OS-IIÆô¶¯Ê±Ê¹ÓÃOSStartHighRdyÔËÐÐµÚÒ»¸ö
                       ÈÎÎñ,
  240 0000012C         ;**           OSStartHighRdy»áµ÷ÓÃ__OSStartHighRdy
  241 0000012C         ;** Êä¡¡Èë:   ÎÞ
  242 0000012C         ;** Êä¡¡³ö :  ÎÞ
  243 0000012C         ;** È«¾Ö±äÁ¿: OSRunning,OSTCBCur,OSTCBHighRdy,OsEnterSum
                       
  244 0000012C         ;** µ÷ÓÃÄ£¿é: OSTaskSwHook
  245 0000012C         ;** 
  246 0000012C         ;** ×÷¡¡Õß: ³ÂÃ÷¼Æ
  247 0000012C         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ5ÈÕ
  248 0000012C         ;**-----------------------------------------------------
                       --------------------------------------------------
  249 0000012C         ;** ÐÞ¡¡¸Ä: ³ÂÃ÷¼Æ
  250 0000012C         ;** ÈÕ¡¡ÆÚ: 2003Äê6ÔÂ13ÈÕ
  251 0000012C         ;**-----------------------------------------------------
                       --------------------------------------------------
  252 0000012C         ;*******************************************************
                       *************************************************/
  253 0000012C         
  254 0000012C         __OSStartHighRdy
  255 0000012C E321F09F        MSR              CPSR_c, #(NoInt | SYS32Mode)
  256 00000130         ;¸æËßuC/OS-II×ÔÉíÒÑ¾­ÔËÐÐ
  257 00000130 E59F4034        LDR              R4, =OSRunning
  258 00000134 E3A05001        MOV              R5, #1
  259 00000138 E5C45000        STRB             R5, [R4]
  260 0000013C         
  261 0000013C EBFFFFFE        BL               OSTaskSwHook ;µ÷ÓÃ¹³×Óº¯Êý
  262 00000140         
  263 00000140 E59F601C        LDR              R6, =OSTCBHighRdy
  264 00000144 E5966000        LDR              R6, [R6]
  265 00000148 EAFFFFD6        B                OSIntCtxSw_1
  266 0000014C         
  267 0000014C 00000000 
              00000000 



ARM Macro Assembler    Page 7 


              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000         AREA             SWIStacks, DATA, NOINIT,ALIGN=2
  268 00000000         SvcStackSpace
                               SPACE            SVC_STACK_LEGTH * 4 
                                                            ;¹ÜÀíÄ£Ê½¶ÑÕ»¿Õ¼ä
  269 00000080         
  270 00000080                 END
Command Line: --debug --xref --apcs=interwork --depend=.\OutPut\Os_cpu_a.d -o.\
OutPut\Os_cpu_a.o -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Philips --predefine="__EV
AL SETA 1" --list=.\OutPut\Os_cpu_a.lst ARM\Os_cpu_a.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

OSCtxSw 000000D0

Symbol: OSCtxSw
   Definitions
      At line 200 in file ARM\Os_cpu_a.s
   Uses
      None
Comment: OSCtxSw unused
OSIntCtxSw 0000003C

Symbol: OSIntCtxSw
   Definitions
      At line 146 in file ARM\Os_cpu_a.s
   Uses
      At line 74 in file ARM\Os_cpu_a.s
      At line 114 in file ARM\Os_cpu_a.s

OSIntCtxSw_1 000000A8

Symbol: OSIntCtxSw_1
   Definitions
      At line 184 in file ARM\Os_cpu_a.s
   Uses
      At line 265 in file ARM\Os_cpu_a.s
Comment: OSIntCtxSw_1 used once
SoftwareInterrupt 00000000

Symbol: SoftwareInterrupt
   Definitions
      At line 101 in file ARM\Os_cpu_a.s
   Uses
      At line 75 in file ARM\Os_cpu_a.s
Comment: SoftwareInterrupt used once
StackSvc 00000038

Symbol: StackSvc
   Definitions
      At line 121 in file ARM\Os_cpu_a.s
   Uses
      At line 102 in file ARM\Os_cpu_a.s
Comment: StackSvc used once
__OSStartHighRdy 0000012C

Symbol: __OSStartHighRdy
   Definitions
      At line 254 in file ARM\Os_cpu_a.s
   Uses
      At line 73 in file ARM\Os_cpu_a.s
      At line 115 in file ARM\Os_cpu_a.s

subr 00000000

Symbol: subr
   Definitions
      At line 61 in file ARM\Os_cpu_a.s
   Uses
      None
Comment: subr unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SWIStacks 00000000

Symbol: SWIStacks
   Definitions
      At line 267 in file ARM\Os_cpu_a.s
   Uses
      None
Comment: SWIStacks unused
SvcStackSpace 00000000

Symbol: SvcStackSpace
   Definitions
      At line 268 in file ARM\Os_cpu_a.s
   Uses
      At line 121 in file ARM\Os_cpu_a.s
Comment: SvcStackSpace used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FIQ32Mode 00000011

Symbol: FIQ32Mode
   Definitions
      At line 54 in file ARM\Os_cpu_a.s
   Uses
      None
Comment: FIQ32Mode unused
IRQ32Mode 00000012

Symbol: IRQ32Mode
   Definitions
      At line 53 in file ARM\Os_cpu_a.s
   Uses
      None
Comment: IRQ32Mode unused
NoInt 00000080

Symbol: NoInt
   Definitions
      At line 48 in file ARM\Os_cpu_a.s
   Uses
      At line 152 in file ARM\Os_cpu_a.s
      At line 161 in file ARM\Os_cpu_a.s
      At line 189 in file ARM\Os_cpu_a.s
      At line 255 in file ARM\Os_cpu_a.s

SVC32Mode 00000013

Symbol: SVC32Mode
   Definitions
      At line 51 in file ARM\Os_cpu_a.s
   Uses
      At line 189 in file ARM\Os_cpu_a.s
Comment: SVC32Mode used once
SVC_STACK_LEGTH 00000020

Symbol: SVC_STACK_LEGTH
   Definitions
      At line 46 in file ARM\Os_cpu_a.s
   Uses
      At line 121 in file ARM\Os_cpu_a.s
      At line 268 in file ARM\Os_cpu_a.s

SYS32Mode 0000001F

Symbol: SYS32Mode
   Definitions
      At line 52 in file ARM\Os_cpu_a.s
   Uses
      At line 152 in file ARM\Os_cpu_a.s
      At line 161 in file ARM\Os_cpu_a.s
      At line 255 in file ARM\Os_cpu_a.s

T_bit 00000020

Symbol: T_bit
   Definitions
      At line 57 in file ARM\Os_cpu_a.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 107 in file ARM\Os_cpu_a.s
Comment: T_bit used once
USR32Mode 00000010

Symbol: USR32Mode
   Definitions
      At line 50 in file ARM\Os_cpu_a.s
   Uses
      None
Comment: USR32Mode unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

OSPrioCur 00000000

Symbol: OSPrioCur
   Definitions
      At line 65 in file ARM\Os_cpu_a.s
   Uses
      At line 175 in file ARM\Os_cpu_a.s
      At line 218 in file ARM\Os_cpu_a.s

OSPrioHighRdy 00000000

Symbol: OSPrioHighRdy
   Definitions
      At line 66 in file ARM\Os_cpu_a.s
   Uses
      At line 176 in file ARM\Os_cpu_a.s
      At line 219 in file ARM\Os_cpu_a.s

OSRunning 00000000

Symbol: OSRunning
   Definitions
      At line 68 in file ARM\Os_cpu_a.s
   Uses
      At line 257 in file ARM\Os_cpu_a.s
Comment: OSRunning used once
OSTCBCur 00000000

Symbol: OSTCBCur
   Definitions
      At line 63 in file ARM\Os_cpu_a.s
   Uses
      At line 169 in file ARM\Os_cpu_a.s
      At line 182 in file ARM\Os_cpu_a.s
      At line 210 in file ARM\Os_cpu_a.s
      At line 223 in file ARM\Os_cpu_a.s

OSTCBHighRdy 00000000

Symbol: OSTCBHighRdy
   Definitions
      At line 64 in file ARM\Os_cpu_a.s
   Uses
      At line 180 in file ARM\Os_cpu_a.s
      At line 224 in file ARM\Os_cpu_a.s
      At line 263 in file ARM\Os_cpu_a.s

OSTaskSwHook 00000000

Symbol: OSTaskSwHook
   Definitions
      At line 67 in file ARM\Os_cpu_a.s
   Uses
      At line 173 in file ARM\Os_cpu_a.s
      At line 214 in file ARM\Os_cpu_a.s
      At line 261 in file ARM\Os_cpu_a.s

OsEnterSum 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: OsEnterSum
   Definitions
      At line 70 in file ARM\Os_cpu_a.s
   Uses
      At line 164 in file ARM\Os_cpu_a.s
      At line 194 in file ARM\Os_cpu_a.s

SWI_Exception 00000000

Symbol: SWI_Exception
   Definitions
      At line 71 in file ARM\Os_cpu_a.s
   Uses
      At line 117 in file ARM\Os_cpu_a.s
Comment: SWI_Exception used once
8 symbols
351 symbols in table
